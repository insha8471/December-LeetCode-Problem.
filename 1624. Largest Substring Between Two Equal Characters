1st Approach -- Brute force
class Solution {
    public int maxLengthBetweenEqualCharacters(String s) {
        int maxLen = -1;
        int n = s.length();
        HashSet<Character> st = new HashSet<>();
        for(int i=0;i<n-1;i++){
            
            st.add(s.charAt(i));
            int temp = 0;
            for(int j=i+1;j<n;j++){
                if(!st.contains(s.charAt(j))){
                    temp++;
                }else{
                    maxLen = Math.max(maxLen, temp);
                    temp++;
                }
            }
            st.remove(s.charAt(i));
        }
        return maxLen;
    }
}

//2nd Approach-- optimal
class Solution {
    public int maxLengthBetweenEqualCharacters(String s) {
        Map<Character, Integer> lastOcurr = new HashMap<>();
        int maxLen = -1;
        for(int i=0;i<s.length();i++){
            char c = s.charAt(i);
            
            if(lastOcurr.containsKey(c)){
                maxLen = Math.max(maxLen, i-lastOcurr.get(c)-1);
            }else{
                lastOcurr.put(c, i);
            }
        }
        return maxLen;
    }
}
